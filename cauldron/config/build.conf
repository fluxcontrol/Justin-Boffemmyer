#!/bin/bash

# path to the build chroots
CAULDRON_BUILD="${CAULDRON_BUILD:-$CAULDRON_TMP/build}"

# list of standard directories to require in chroots
CAULDRON_FHS_DIRS=( dev/pts proc sys bin sbin mnt opt root tmp boot \
                    etc/network etc/sysconfig \
                    lib/modules \
                    usr/bin usr/include usr/lib usr/sbin usr/src \
                    usr/local/bin usr/local/include usr/local/lib \
                    usr/local/man usr/local/sbin usr/local/share \
                    usr/local/src \
                    usr/share/dict usr/share/doc usr/share/info \
                    usr/share/locale usr/share/misc usr/share/nls \
                    usr/share/terminfo usr/share/tmac usr/share/zoneinfo \
                    usr/share/man/1 usr/share/man/2 usr/share/man/3 \
                    usr/share/man/4 usr/share/man/5 usr/share/man/6 \
                    usr/share/man/7 usr/share/man/8 \
                    var/account var/crash var/lib var/lock var/log \
                    var/opt var/run var/spool/ \
                    var/cache/fonts var/cache/man \
                    var/tmp
                  )

# path to working resolv.conf that can be used to resolv hostnames and download
# necessary source files
CAULDRON_RESOLV="${CAULDRON_RESOLV:-$CAULDRON_HOST/etc/resolv.conf}"

# file listing all the spells needed for the build toolchain
CAULDRON_TOOLCHAIN="${CAULDRON_TOOLCHAIN:-$CAULDRON_DATA/$CAULDRON_ARCH/toolchain}"

# name of the local on-disk basesystem chroot image to use for the
# baseroot method (i.e. cauldron_toolchain_baseroot)
CAULDRON_BASEROOT="${CAULDRON_BASEROOT:-smgl-stable-0.61-basesystem-$CAULDRON_ARCH.tar.xz}"
# URL to a basesystem chroot for use with cauldron_toolchain_baseroot
# only used when generating CAULDRON_BUILD from the baseroot method
CAULDRON_BASEROOT_URL="${CAULDRON_BASEROOT_URL:-http://download.sourcemage.org/image/official/$CAULDRON_BASEROOT}"

# whether CAULDRON_BUILD should be rm'ed after cauldron has finished
CAULDRON_CLEAN="${CAULDRON_CLEAN:-no}"

# whether cauldron should try it's hardest to generate needed spell
# caches, even if that means casting and dispelling extra spells in a
# chroot (only used when generating the base toolchain)
CAULDRON_AGGRESSIVE="${CAULDRON_AGGRESSIVE:-yes}"

