#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  libcolor defines various colors to be used and functions to manipulate them
##
##=head1 COPYRIGHT
##
##  Copyright 2010 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

# initialize for color - can be overridden after libcolor is loaded
LIBCOLOR_NOCOLOR="no"

#-------------------------------------------------------------------------------
# Message Color Definitions
#-------------------------------------------------------------------------------
: "${LIBCOLOR_NORMAL:=[0m}"
: "${LIBCOLOR_BOLD:=[1m}"
: "${LIBCOLOR_BLACK:=[30m}"
: "${LIBCOLOR_RED:=[31m}"
: "${LIBCOLOR_GREEN:=[32m}"
: "${LIBCOLOR_YELLOW:=[33m}"
: "${LIBCOLOR_BLUE:=[34m}"
: "${LIBCOLOR_VIOLET:=[35m}"
: "${LIBCOLOR_CYAN:=[36m}"
: "${LIBCOLOR_WHITE:=[37m}"

: "${LIBCOLOR_NORMAL_COLOR:=${LIBCOLOR_NORMAL}${LIBCOLOR_WHITE}}"
: "${LIBCOLOR_NOTICE_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_VIOLET}}"
: "${LIBCOLOR_OK_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_GREEN}}"
: "${LIBCOLOR_ERROR_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_RED}}"
: "${LIBCOLOR_WARN_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_YELLOW}}"
: "${LIBCOLOR_QUERY_COLOR:=${LIBCOLOR_NORMAL}${LIBCOLOR_CYAN}}"
: "${LIBCOLOR_FILE_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_WHITE}}"
: "${LIBCOLOR_DIR_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_BLUE}}"
: "${LIBCOLOR_SYMLINK_COLOR:=${LIBCOLOR_BOLD}${LIBCOLOR_CYAN}}"

#-------------------------------------------------------------------------------
## @param facility (notice, warn, error, symlink, ...)
## @param message
##
## Prints the given message in the facility color. The facility must be one of
## the libcolor message color functions
##
#-------------------------------------------------------------------------------
function libcolor_msg() {
  local func="$1"

  [[ -n "$func" ]] || return $?

  shift
  eval libcolor_${func} "\$@"
  printf "\n"
}


#-------------------------------------------------------------------------------
## @param color
## @param message
##
## Prints the given message in the given color.
##
#-------------------------------------------------------------------------------
libcolor_printf() {
  local reset="${color:-$LIBCOLOR_NORMAL_COLOR}"
  local color="$1"
  shift 1

  if [[ "$LIBCOLOR_NOCOLOR" = "yes" ]]
  then
    printf "%s" "$*"
    return "$?"
  fi

  printf "%b%s%b" "$color" "$*" "${reset:-$LIBCOLOR_NORMAL_COLOR}"
}

#-------------------------------------------------------------------------------
## @param info message
##
## Prints the given message in "info" color.
##
#-------------------------------------------------------------------------------
function libcolor_info() { libcolor_printf "$LIBCOLOR_NORMAL_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param notice message
##
## Prints the given message in "notice" color.
##
#-------------------------------------------------------------------------------
function libcolor_notice() { libcolor_printf "$LIBCOLOR_NOTICE_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param warning message
##
## Prints the given message in "warn" color.
##
#-------------------------------------------------------------------------------
function libcolor_warn() { libcolor_printf "$LIBCOLOR_WARN_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param error message
##
## Prints the given error message in "error" color.
##
#-------------------------------------------------------------------------------
function libcolor_error() { libcolor_printf "$LIBCOLOR_ERROR_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param query message
##
## Prints the given query message in "query" color.
##
#-------------------------------------------------------------------------------
function libcolor_query() { libcolor_printf "$LIBCOLOR_QUERY_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param file name
##
## Prints the given file name in "file" color.
##
#-------------------------------------------------------------------------------
function libcolor_file() { libcolor_printf "$LIBCOLOR_FILE_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param directory name
##
## Prints the given directory name in "dir" color.
##
#-------------------------------------------------------------------------------
function libcolor_dir() { libcolor_printf "$LIBCOLOR_DIR_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param symlink name
##
## Prints the given symlink name in "symlink" color.
##
#-------------------------------------------------------------------------------
function libcolor_symlink() { libcolor_printf "$LIBCOLOR_SYMLINK_COLOR" "$@" ;}

#-------------------------------------------------------------------------------
## @param colors (RED, BLUE, BOLD, etc., ...)
##
## Prints the control code(s) for the given color(s). This is an internal
## function that should only be used when absolutely necessary for specialized
## output. Use the message functions above unless you have a *really* good
## reason for using this one instead.
##
#-------------------------------------------------------------------------------
function libcolor_color() {
  local color=

  while [[ "$#" -gt 0 ]]
  do
    eval color="\$LIBCOLOR_$1"
    [[ -n "$color" ]] &&
      printf "%b" "$color"
    shift
  done
}

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab
