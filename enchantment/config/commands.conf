#!/bin/bash

# command to output text strings (typically echo, output to STDOUT)
[[ -n "${ENCHANT_CMD_OUTPUT[@]}" ]] ||
  ENCHANT_CMD_OUTPUT=(
    echo
  )

# command to enter a chroot
[[ -n "${ENCHANT_CMD_CHROOT[@]}" ]] ||
  ENCHANT_CMD_CHROOT=(
    "$ENCHANT_ISO_PATH/bin/chroot"
  )

# command to install a single file
[[ -n "${ENCHANT_CMD_INSTALL_FILE[@]}" ]] ||
  ENCHANT_CMD_INSTALL_FILE=(
    cp
    -dfp
  )

# command to recursively install a directory and its contents
[[ -n "${ENCHANT_CMD_INSTALL_DIR[@]}" ]] ||
  ENCHANT_CMD_INSTALL_DIR=(
    cp
    --parents
    -dfpr
  )

# command to download a url from the internet
[[ -n "${ENCHANT_CMD_URL_DL[@]}" ]] ||
  ENCHANT_CMD_URL_DL=(
    wget
  )

# command used for compressing files
[[ -n "${ENCHANT_CMD_COMPRESS[@]}" ]] ||
  ENCHANT_CMD_COMPRESS=(
    bzip2
  )

# command to unpack a baseroot archive into the cauldron build
[[ -n "${ENCHANT_CMD_TAR[@]}" ]] ||
  ENCHANT_CMD_TAR=(
    tar
  )

# command to unpack a sorcery archive into the cauldron build
[[ -n "${ENCHANT_CMD_UNPACK_SORCERY[@]}" ]] ||
  ENCHANT_CMD_UNPACK_SORCERY=(
    "${ENCHANT_CMD_TAR[@]}"
    -C "$ENCHANT_BUILD/usr/src"
    xf
  )

# command to chmod files
[[ -n "${ENCHANT_CMD_CHMOD[@]}" ]] ||
  ENCHANT_CMD_CHMOD=(
    chmod
  )

# command to make directories
[[ -n "${ENCHANT_CMD_MKDIR[@]}" ]] ||
  ENCHANT_CMD_MKDIR=(
    mkdir
    -p
  )

# command to remove directories
[[ -n "${ENCHANT_CMD_RMDIR[@]}" ]] ||
  ENCHANT_CMD_RMDIR=(
    rmdir
  )

# command to move
[[ -n "${ENCHANT_CMD_MV[@]}" ]] ||
  ENCHANT_CMD_MV=(
    mv
  )

# command to copy
[[ -n "${ENCHANT_CMD_CP[@]}" ]] ||
  ENCHANT_CMD_CP=(
    cp
  )

# command to copy forcefully
[[ -n "${ENCHANT_CMD_CP_FORCE[@]}" ]] ||
  ENCHANT_CMD_CP_FORCE=(
    "${ENCHANT_CMD_CP[@]}"
    -f
  )

# command to copy recursively
[[ -n "${ENCHANT_CMD_CP_RECURSE[@]}" ]] ||
  ENCHANT_CMD_CP_RECURSE=(
    "${ENCHANT_CMD_CP[@]}"
    -r
  )

# command to copy recursively forcefully
[[ -n "${ENCHANT_CMD_CP_RECURSE_FORCE[@]}" ]] ||
  ENCHANT_CMD_CP_RECURSE_FORCE=(
    "${ENCHANT_CMD_CP_RECURSE[@]}"
    -f
  )

# command to copy recursively, preserving as much information as possible
[[ -n "${ENCHANT_CMD_CP_EXACT[@]}" ]] ||
  ENCHANT_CMD_CP_EXACT=(
    "${ENCHANT_CMD_CP[@]}"
    -a --parents
  )

# command to remove files
[[ -n "${ENCHANT_CMD_RM[@]}" ]] ||
  ENCHANT_CMD_RM=(
    rm
  )

# command to remove files forcefully
[[ -n "${ENCHANT_CMD_RM_FORCE[@]}" ]] ||
  ENCHANT_CMD_RM_FORCE=(
    "${ENCHANT_CMD_RM_[@]}"
    -f
  )

# command to remove files recursively
[[ -n "${ENCHANT_CMD_RM_RECURSE[@]}" ]] ||
  ENCHANT_CMD_RM_RECURSE=(
    "${ENCHANT_CMD_RM[@]}"
    -r
  )

# command to remove files recursively forcefully
[[ -n "${ENCHANT_CMD_RM_RECURSE_FORCE[@]}" ]] ||
  ENCHANT_CMD_RM_RECURSE_FORCE=(
    "${ENCHANT_CMD_RM_RECURSE[@]}"
    -f
  )

[[ -n "${ENCHANT_CMD_SYMLINK[@]}" ]] ||
  ENCHANT_CMD_SYMLINK=(
    ln
    -s
  )

[[ -n "${ENCHANT_CMD_SYMLINK_FORCE[@]}" ]] ||
  ENCHANT_CMD_SYMLINK_FORCE=(
    "${ENCHANT_CMD_SYMLINK[@]}"
    -f
  )

[[ -n "${ENCHANT_CMD_HARDLINK[@]}" ]] ||
  ENCHANT_CMD_HARDLINK=(
    ln
  )

[[ -n "${ENCHANT_CMD_HARDLINK_FORCE[@]}" ]] ||
  ENCHANT_CMD_HARDLINK_FORCE=(
    "${ENCHANT_CMD_HARDLINK[@]}"
    -f
  )

# command to mount a filesystem
[[ -n "${ENCHANT_CMD_MOUNT[@]}" ]] ||
  ENCHANT_CMD_MOUNT=(
    mount
  )

# command to bind-mount a filesystem
[[ -n "${ENCHANT_CMD_MOUNT_BIND[@]}" ]] ||
  ENCHANT_CMD_MOUNT_BIND=(
    "${ENCHANT_CMD_MOUNT[@]}"
    --bind
  )

# command to loop-mount a filesystem
[[ -n "${ENCHANT_CMD_MOUNT_LOOP[@]}" ]] ||
  ENCHANT_CMD_MOUNT_LOOP=(
    "${ENCHANT_CMD_MOUNT[@]}"
    -o loop
  )

# command to unmount a filesystem
[[ -n "${ENCHANT_CMD_UNMOUNT[@]}" ]] ||
  ENCHANT_CMD_UNMOUNT=(
    umount
  )

# command to dump data
[[ -n "${ENCHANT_CMD_DD[@]}" ]] ||
  ENCHANT_CMD_DD=(
    dd
  )

# command to concatenate a file
[[ -n "${ENCHANT_CMD_CAT[@]}" ]] ||
  ENCHANT_CMD_CAT=(
    cat
  )

# command to count characters in a file
[[ -n "${ENCHANT_CMD_WC[@]}" ]] ||
  ENCHANT_CMD_WC=(
    wc
  )

# command to "head" a file
[[ -n "${ENCHANT_CMD_HEAD[@]}" ]] ||
  ENCHANT_CMD_HEAD=(
    head
  )

# command to "tail" a file
[[ -n "${ENCHANT_CMD_TAIL[@]}" ]] ||
  ENCHANT_CMD_TAIL=(
    tail
  )

# command to "page" text output (less, more, etc.)
[[ -n "${ENCHANT_CMD_PAGER[@]}" ]] ||
  ENCHANT_CMD_PAGER=(
    less
    -XFR
  )

# command to split text into columns
[[ -n "${ENCHANT_CMD_COLUMN[@]}" ]] ||
  ENCHANT_CMD_COLUMN=(
    column
  )

# command to paste text from multiple "files"
[[ -n "${ENCHANT_CMD_PASTE[@]}" ]] ||
  ENCHANT_CMD_PASTE=(
    paste
  )

# command to find files
[[ -n "${ENCHANT_CMD_FIND[@]}" ]] ||
  ENCHANT_CMD_FIND=(
    find
  )

# command to grep a file/stream
[[ -n "${ENCHANT_CMD_GREP[@]}" ]] ||
  ENCHANT_CMD_GREP=(
    grep
  )

# command to grep a file/stream
[[ -n "${ENCHANT_CMD_GREP_QUIET[@]}" ]] ||
  ENCHANT_CMD_GREP_QUIET=(
    grep
    -q
  )

# command to split a text stream by delimiters
[[ -n "${ENCHANT_CMD_CUT[@]}" ]] ||
  ENCHANT_CMD_CUT=(
    cut
  )

# command to awk a file/stream
[[ -n "${ENCHANT_CMD_AWK[@]}" ]] ||
  ENCHANT_CMD_AWK=(
    awk
    #gawk
  )

# command to sed a file/stream
[[ -n "${ENCHANT_CMD_SED[@]}" ]] ||
  ENCHANT_CMD_SED=(
    sed
  )

# command to sed a file/stream
[[ -n "${ENCHANT_CMD_SEDFILE[@]}" ]] ||
  ENCHANT_CMD_SEDFILE=(
    sed
    -i
  )

# command to set colored output for ls
[[ -n "${ENCHANT_CMD_DIRCOLORS[@]}" ]] ||
  ENCHANT_CMD_DIRCOLORS=(
    dircolors
    -b
  )

# command for loading a console keymap
[[ -n "${ENCHANT_CMD_LOAD_KEYMAP[@]}" ]] ||
  ENCHANT_CMD_LOAD_KEYMAP=(
    loadkeys
  )

# sorcery cast/dispel/rebuild commands
[[ -n "${ENCHANT_CMD_CAST[@]}" ]] ||
  ENCHANT_CMD_CAST=(
    "$ENCHANT_HSORCERY_PATH/cast"
  )
[[ -n "${ENCHANT_CMD_DISPEL[@]}" ]] ||
  ENCHANT_CMD_DISPEL=(
    "$ENCHANT_HSORCERY_PATH/dispel"
  )
[[ -n "${ENCHANT_CMD_REBUILD[@]}" ]] ||
  ENCHANT_CMD_REBUILD=(
    "$ENCHANT_HSORCERY_PATH/sorcery"
    rebuild
  )
[[ -n "${ENCHANT_CMD_GAZE_INSTALLED[@]}" ]] ||
  ENCHANT_CMD_GAZE_INSTALLED=(
    gaze -q installed
  )

