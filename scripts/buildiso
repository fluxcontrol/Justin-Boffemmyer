#!/bin/bash
set -x

# TODO: be able to specify configfile on command line


function do_chroot() {
# this function will make it simpler to do things within the chroot
# $1 is the chroot path
# $2 is the script path (within the chroot)
	CHROOT_PATH=$1
	CHROOT_SCRIPT=$2

	mount --bind /var/spool/sorcery $CHROOT_PATH/var/spool/sorcery &&
	mount --bind /proc $CHROOT_PATH/proc &&
	mount --bind /dev $CHROOT_PATH/dev &&
	mount --bind /dev/pts $CHROOT_PATH/dev/pts &&

	chroot $CHROOT_PATH $CHROOT_SCRIPT

	umount $CHROOT_PATH/dev/pts $CHROOT_PATH/dev $CHROOT_PATH/proc $CHROOT_PATH/var/spool/sorcery
}


#takes no arguments, gets all config from the file
source ./config  &&

# TODO: do a root check!

#acquire the chroot tarball of choice only if it's not there...
#TODO: validation!
if [ ! -f $DOWNLOAD_SPOOL/$CHROOTFILE ] ; then
  wget http://download.sourcemage.org/image/official/$CHROOTFILE -O $DOWNLOAD_SPOOL/$CHROOTFILE
fi &&


# build chroot dirs
ISO_CHROOT=$ISO_BUILD_ROOT/iso-chroot &&
SYSTEM_CHROOT=$ISO_BUILD_ROOT/system-chroot &&
mkdir -p $ISO_CHROOT $SYSTEM_CHROOT &&
 
#Unpack our system tarball and name it correctly
cd $ISO_BUILD_ROOT &&
tar -jxf $DOWNLOAD_SPOOL/$CHROOTFILE &&
cd $(basename $CHROOTFILE .tar.bz2) &&
mv * $ISO_CHROOT/. &&
cd $ISO_BUILD_ROOT &&
rmdir $(basename $CHROOTFILE .tar.bz2) &&

################################################################################
# Stage one of ISO construction - Things both the system and the ISO need
################################################################################
#prepare to cast the spells we want on the ISO
cp $ISO_SPELLS $ISO_CHROOT/tmp/spells &&
cp $CAULDRON_DIR/scripts/isoStage1 $ISO_CHROOT/root/isoStage1 &&
# need to be able to download things!
cp /etc/resolv.conf $ISO_CHROOT/etc/resolv.conf
# also get the kernel config in there
cp $CAULDRON_DIR/scripts/$CHROOT_ARCH.config $ISO_CHROOT/root/kernel.config

# set up the chroot

#TODO: construct a sorcery config that is modified from the default a bit
#  to remove the asking about viewing reports, ot make it go faster
# chroot is ready for teh casting
do_chroot $ISO_CHROOT /root/isoStage1

################################################################################
# Done with stage 1
################################################################################

# DUPLICATE the chroot
cd $ISO_BUILD_ROOT &&
cp -a $ISO_CHROOT/* $SYSTEM_CHROOT/. &&

################################################################################
# System chroot setup
################################################################################
# copy over needed files into the system
cp -a $CAULDRON_DIR/system/* $SYSTEM_CHROOT/. &&

# copy over system stage script
cp $CAULDRON_DIR/scripts/systemSetup $SYSTEM_CHROOT/root/systemSetup &&

# run the system setup script
do_chroot $SYSTEM_CHROOT /root/systemSetup
################################################################################
# Done with system chroot!
################################################################################

#tarball system chroot
cd $SYSTEM_CHROOT &&
tar -cjf $ISO_BUILD_ROOT/system.tar.bz2 * &&

################################################################################
# Stage 2 of iso construction
################################################################################
# copy over needed files to the iso
cp -a $CAULDRON_DIR/iso/* $ISO_CHROOT/. &&

#copy over the stage 2 script
cp $CAULDRON_DIR/scripts/isoStage2 $ISO_CHROOT/root/isoStage2 &&

# also get the mkinitrd stuff in there
cp $CAULDRON_DIR/scripts/mkinitrd $ISO_CHROOT/root/mkinitrd &&

# run the stage2 script
do_chroot $ISO_CHROOT /root/isoStage2
################################################################################
# Done with stage 2
################################################################################

#okay almost done, move the system chroot tarball into the iso root
cd $ISO_BUILD_ROOT &&
mv $ISO_BUILD_ROOT/system.tar.bz2 $ISO_CHROOT/system.tar.bz2 &&

echo "DEBUGGING! MAKE SURE /var/spool/sorcery ISN'T BIND MOUNTED!!!"
echo "press enter to continue"
read
# do some final cleaning. We shouldn't be bind mounted at this point
# just to make sure we don't have anything extra laying round
rm -rf $ISO_CHROOT/var/spool/sorcery/* $SYSTEM_CHROOT/var/spool/sorcery/*

# Construct the .ISO file
cd $ISO_CHROOT/.. &&
mkisofs -quiet -R -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o smgl-$ISO_VERSION-$CHROOT_ARCH.iso ${ISO_CHROOT//$ISO_BUILD_ROOT\//} &&

echo "ISO COMPLETED!"
